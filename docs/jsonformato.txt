-------------------------------------------
{
  "board": [
    [16, 2, 16, 2, 16],
    [8, 2, 2, 2, 8],
    [8, 4, 16, 4, 8],
    [4, 16, 4, 16, 4],
    [4, 4, 4, 4, 4],
    [16, -1, 8, -1, 16],
  ],
  "score": 100,
  "code": AAAAA,
  "possibleMoves": [
    "0,0" : [ [1,0], [-1, 0], [0,1] ],
    "0,1" : [ [0,1], [1,1] ],
    ...
  ]
}
-------------------------------------------
Siendo AAAAA un código UNICO de juego
Siendo possibleMoves la primera clave "i,j" (nodo) y después un array de posibles direcciones
Si ha habido un error al generar la matriz devolverá {"error": code}, donde code será un código de error dentro de codigoserror.txt
La primera vez se mandará:
- possibleMoves
- code
El resto de veces NO
-------------------------------------------


{
   "nodes": [[k,l],[a1,b1],[a2,b2]]
}
-------------------------------------------
[k,l] siendo la posición inicial
[ax,bx] siendo los movimientos posteriores (estan entre -1 y 1)
-------------------------------------------
{
  "columns" : X,
  "rows": Y,
}
{
  "board": Z,
  "score": JJJ,
  "movecount": LLL
}
-------------------------------------------
Json usados para crear el objeto "board". Puede ser de dos tipos, si se está creando nuevo o si se restaura la partida.
X, Y, JJJ y LLL son integers.
Y tiene que ser par y más de 4.
X tiene que ser impar y más de 3.
Z tiene que ser JSON de tipo board, con sus columnas y filas cumpliendo las conidicones de X e Y
-------------------------------------------
